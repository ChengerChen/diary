package leetcode.algorithm;

/**
 * @author Chenger
 * @description 旋转链表
 * @date 2021/3/3 16:10
 */
public class Main61 {

    public static void main(String[] args) {
        ListNode head1 = new Main61().rotateRight(new ListNode(1, new ListNode(2, new ListNode(3, new ListNode(4, new ListNode(5))))), 2);
        ListNode head2 = new Main61().rotateRight(new ListNode(0, new ListNode(1, new ListNode(2))), 4);
        ListNode head3 = new Main61().rotateRight(new ListNode(1, new ListNode(2)), 1);
        System.out.println("1");
    }

    public static class ListNode {
        int val;
        ListNode next;

        ListNode() {
        }

        ListNode(int val) {
            this.val = val;
        }

        ListNode(int val, ListNode next) {
            this.val = val;
            this.next = next;
        }
    }


    public ListNode rotateRight(ListNode head, int k) {
        if (head == null) {
            return null;
        }
        if (k == 0) {
            return head;
        }
        ListNode p = head;
        int i = 1;
        while (p.next != null) {
            p = p.next;
            i++;
        }
        k = k % i;
        p.next = head;
        p = head;
        for (int j = 0; j < (i - k - 1); j++) {
            p = p.next;
        }
        head = p.next;
        p.next = null;
        return head;
    }

}