package leetcode.algorithm;

/**
 * @author Chenger
 * @description 超级丑数
 * @date 2021/3/3 11:58
 * @url https://leetcode-cn.com/problems/super-ugly-number/
 */
public class Main313 {

    public static void main(String[] args) {
        new Main313().nthSuperUglyNumber(12, new int[]{2, 7, 13, 19});
    }

    public int nthSuperUglyNumber(int n, int[] primes) {
        int[] num = new int[n];
        int[] index = new int[primes.length];
        num[0] = 1;
        int i = 1;
        while (i < n) {
            int temp = primes[0] * num[index[0]];
            for (int j = 1; j < primes.length; j++) {
                temp = temp < (primes[j] * num[index[j]]) ? temp : primes[j] * num[index[j]];
            }
            num[i] = temp;
            for (int j = 0; j < index.length; j++) {
                if (temp == (primes[j] * num[index[j]])) {
                    index[j] += 1;
                }
            }
            i++;
        }
        return num[n-1];
    }
}
